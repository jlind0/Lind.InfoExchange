//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lind.InfoExchange.Tests.Load.OrderProcessor {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AskDTO", Namespace="http://schemas.datacontract.org/2004/07/Lind.InfoExchange.Service.WCF")]
    [System.SerializableAttribute()]
    public partial class AskDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowPartialFillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyCommissionToBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AskDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AskIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AskQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BuyRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommodityBuyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommoditySellIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MinBuyQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> MinSellQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SellRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ValidToDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowPartialFill {
            get {
                return this.AllowPartialFillField;
            }
            set {
                if ((this.AllowPartialFillField.Equals(value) != true)) {
                    this.AllowPartialFillField = value;
                    this.RaisePropertyChanged("AllowPartialFill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyCommissionToBuy {
            get {
                return this.ApplyCommissionToBuyField;
            }
            set {
                if ((this.ApplyCommissionToBuyField.Equals(value) != true)) {
                    this.ApplyCommissionToBuyField = value;
                    this.RaisePropertyChanged("ApplyCommissionToBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AskDate {
            get {
                return this.AskDateField;
            }
            set {
                if ((this.AskDateField.Equals(value) != true)) {
                    this.AskDateField = value;
                    this.RaisePropertyChanged("AskDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AskID {
            get {
                return this.AskIDField;
            }
            set {
                if ((this.AskIDField.Equals(value) != true)) {
                    this.AskIDField = value;
                    this.RaisePropertyChanged("AskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AskQuantity {
            get {
                return this.AskQuantityField;
            }
            set {
                if ((this.AskQuantityField.Equals(value) != true)) {
                    this.AskQuantityField = value;
                    this.RaisePropertyChanged("AskQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BuyRatio {
            get {
                return this.BuyRatioField;
            }
            set {
                if ((this.BuyRatioField.Equals(value) != true)) {
                    this.BuyRatioField = value;
                    this.RaisePropertyChanged("BuyRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommodityBuyID {
            get {
                return this.CommodityBuyIDField;
            }
            set {
                if ((this.CommodityBuyIDField.Equals(value) != true)) {
                    this.CommodityBuyIDField = value;
                    this.RaisePropertyChanged("CommodityBuyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommoditySellID {
            get {
                return this.CommoditySellIDField;
            }
            set {
                if ((this.CommoditySellIDField.Equals(value) != true)) {
                    this.CommoditySellIDField = value;
                    this.RaisePropertyChanged("CommoditySellID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MinBuyQuantity {
            get {
                return this.MinBuyQuantityField;
            }
            set {
                if ((this.MinBuyQuantityField.Equals(value) != true)) {
                    this.MinBuyQuantityField = value;
                    this.RaisePropertyChanged("MinBuyQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> MinSellQuantity {
            get {
                return this.MinSellQuantityField;
            }
            set {
                if ((this.MinSellQuantityField.Equals(value) != true)) {
                    this.MinSellQuantityField = value;
                    this.RaisePropertyChanged("MinSellQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SellRatio {
            get {
                return this.SellRatioField;
            }
            set {
                if ((this.SellRatioField.Equals(value) != true)) {
                    this.SellRatioField = value;
                    this.RaisePropertyChanged("SellRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ValidToDate {
            get {
                return this.ValidToDateField;
            }
            set {
                if ((this.ValidToDateField.Equals(value) != true)) {
                    this.ValidToDateField = value;
                    this.RaisePropertyChanged("ValidToDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDTO", Namespace="http://schemas.datacontract.org/2004/07/Lind.InfoExchange.Service.WCF")]
    [System.SerializableAttribute()]
    public partial class OrderDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AskIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommissionCommodityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommodityBuyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommoditySellIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Lind.InfoExchange.Tests.Load.OrderProcessor.OrderLegDTO[] OrderLegsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AskID {
            get {
                return this.AskIDField;
            }
            set {
                if ((this.AskIDField.Equals(value) != true)) {
                    this.AskIDField = value;
                    this.RaisePropertyChanged("AskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Commission {
            get {
                return this.CommissionField;
            }
            set {
                if ((this.CommissionField.Equals(value) != true)) {
                    this.CommissionField = value;
                    this.RaisePropertyChanged("Commission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommissionCommodityID {
            get {
                return this.CommissionCommodityIDField;
            }
            set {
                if ((this.CommissionCommodityIDField.Equals(value) != true)) {
                    this.CommissionCommodityIDField = value;
                    this.RaisePropertyChanged("CommissionCommodityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommodityBuyID {
            get {
                return this.CommodityBuyIDField;
            }
            set {
                if ((this.CommodityBuyIDField.Equals(value) != true)) {
                    this.CommodityBuyIDField = value;
                    this.RaisePropertyChanged("CommodityBuyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommoditySellID {
            get {
                return this.CommoditySellIDField;
            }
            set {
                if ((this.CommoditySellIDField.Equals(value) != true)) {
                    this.CommoditySellIDField = value;
                    this.RaisePropertyChanged("CommoditySellID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Lind.InfoExchange.Tests.Load.OrderProcessor.OrderLegDTO[] OrderLegs {
            get {
                return this.OrderLegsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLegsField, value) != true)) {
                    this.OrderLegsField = value;
                    this.RaisePropertyChanged("OrderLegs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderLegDTO", Namespace="http://schemas.datacontract.org/2004/07/Lind.InfoExchange.Service.WCF")]
    [System.SerializableAttribute()]
    public partial class OrderLegDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BuyQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BuyerUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommissionCommodityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommodityBuyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommoditySellIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrderLegIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SellQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BuyQuantity {
            get {
                return this.BuyQuantityField;
            }
            set {
                if ((this.BuyQuantityField.Equals(value) != true)) {
                    this.BuyQuantityField = value;
                    this.RaisePropertyChanged("BuyQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BuyerUserID {
            get {
                return this.BuyerUserIDField;
            }
            set {
                if ((this.BuyerUserIDField.Equals(value) != true)) {
                    this.BuyerUserIDField = value;
                    this.RaisePropertyChanged("BuyerUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Commission {
            get {
                return this.CommissionField;
            }
            set {
                if ((this.CommissionField.Equals(value) != true)) {
                    this.CommissionField = value;
                    this.RaisePropertyChanged("Commission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommissionCommodityID {
            get {
                return this.CommissionCommodityIDField;
            }
            set {
                if ((this.CommissionCommodityIDField.Equals(value) != true)) {
                    this.CommissionCommodityIDField = value;
                    this.RaisePropertyChanged("CommissionCommodityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommodityBuyID {
            get {
                return this.CommodityBuyIDField;
            }
            set {
                if ((this.CommodityBuyIDField.Equals(value) != true)) {
                    this.CommodityBuyIDField = value;
                    this.RaisePropertyChanged("CommodityBuyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommoditySellID {
            get {
                return this.CommoditySellIDField;
            }
            set {
                if ((this.CommoditySellIDField.Equals(value) != true)) {
                    this.CommoditySellIDField = value;
                    this.RaisePropertyChanged("CommoditySellID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrderLegID {
            get {
                return this.OrderLegIDField;
            }
            set {
                if ((this.OrderLegIDField.Equals(value) != true)) {
                    this.OrderLegIDField = value;
                    this.RaisePropertyChanged("OrderLegID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SellQuantity {
            get {
                return this.SellQuantityField;
            }
            set {
                if ((this.SellQuantityField.Equals(value) != true)) {
                    this.SellQuantityField = value;
                    this.RaisePropertyChanged("SellQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderProcessor.IOrderProcessorService")]
    public interface IOrderProcessorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderProcessorService/ExecuteAsk", ReplyAction="http://tempuri.org/IOrderProcessorService/ExecuteAskResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Lind.InfoExchange.Service.WCF.FaultException), Action="http://tempuri.org/IOrderProcessorService/ExecuteAskFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/Lind.InfoExchange.Service.WCF")]
        Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO ExecuteAsk(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderProcessorService/ExecuteAsk", ReplyAction="http://tempuri.org/IOrderProcessorService/ExecuteAskResponse")]
        System.Threading.Tasks.Task<Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO> ExecuteAskAsync(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderProcessorService/UpdateAsk", ReplyAction="http://tempuri.org/IOrderProcessorService/UpdateAskResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Lind.InfoExchange.Service.WCF.FaultException), Action="http://tempuri.org/IOrderProcessorService/UpdateAskFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/Lind.InfoExchange.Service.WCF")]
        void UpdateAsk(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderProcessorService/UpdateAsk", ReplyAction="http://tempuri.org/IOrderProcessorService/UpdateAskResponse")]
        System.Threading.Tasks.Task UpdateAskAsync(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderProcessorService/GetQuote", ReplyAction="http://tempuri.org/IOrderProcessorService/GetQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Lind.InfoExchange.Service.WCF.FaultException), Action="http://tempuri.org/IOrderProcessorService/GetQuoteFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/Lind.InfoExchange.Service.WCF")]
        Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO GetQuote(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderProcessorService/GetQuote", ReplyAction="http://tempuri.org/IOrderProcessorService/GetQuoteResponse")]
        System.Threading.Tasks.Task<Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO> GetQuoteAsync(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderProcessorService/GetMarketQuote", ReplyAction="http://tempuri.org/IOrderProcessorService/GetMarketQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Lind.InfoExchange.Service.WCF.FaultException), Action="http://tempuri.org/IOrderProcessorService/GetMarketQuoteFaultExceptionFault", Name="FaultException", Namespace="http://schemas.datacontract.org/2004/07/Lind.InfoExchange.Service.WCF")]
        Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO GetMarketQuote(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderProcessorService/GetMarketQuote", ReplyAction="http://tempuri.org/IOrderProcessorService/GetMarketQuoteResponse")]
        System.Threading.Tasks.Task<Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO> GetMarketQuoteAsync(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderProcessorServiceChannel : Lind.InfoExchange.Tests.Load.OrderProcessor.IOrderProcessorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderProcessorServiceClient : System.ServiceModel.ClientBase<Lind.InfoExchange.Tests.Load.OrderProcessor.IOrderProcessorService>, Lind.InfoExchange.Tests.Load.OrderProcessor.IOrderProcessorService {
        
        public OrderProcessorServiceClient() {
        }
        
        public OrderProcessorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderProcessorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderProcessorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderProcessorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO ExecuteAsk(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth) {
            return base.Channel.ExecuteAsk(ask, maxLegDepth);
        }
        
        public System.Threading.Tasks.Task<Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO> ExecuteAskAsync(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth) {
            return base.Channel.ExecuteAskAsync(ask, maxLegDepth);
        }
        
        public void UpdateAsk(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask) {
            base.Channel.UpdateAsk(ask);
        }
        
        public System.Threading.Tasks.Task UpdateAskAsync(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask) {
            return base.Channel.UpdateAskAsync(ask);
        }
        
        public Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO GetQuote(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth) {
            return base.Channel.GetQuote(ask, maxLegDepth);
        }
        
        public System.Threading.Tasks.Task<Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO> GetQuoteAsync(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth) {
            return base.Channel.GetQuoteAsync(ask, maxLegDepth);
        }
        
        public Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO GetMarketQuote(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth) {
            return base.Channel.GetMarketQuote(ask, maxLegDepth);
        }
        
        public System.Threading.Tasks.Task<Lind.InfoExchange.Tests.Load.OrderProcessor.OrderDTO> GetMarketQuoteAsync(Lind.InfoExchange.Tests.Load.OrderProcessor.AskDTO ask, int maxLegDepth) {
            return base.Channel.GetMarketQuoteAsync(ask, maxLegDepth);
        }
    }
}
